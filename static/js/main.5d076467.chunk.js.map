{"version":3,"sources":["Game.js","Interface.js","ComputerChoice.js","YourChoice.js","Result.js","App.js","serviceWorker.js","index.js"],"names":["Game","props","results","yourChoice","computerChoice","className","Interface","class","alt","onClick","chooseChoice","style","cursor","width","src","clearState","games","ComputerChoice","allstates","rock","paper","scissors","YourChoice","Result","wins","push","length","draws","losses","App","state","setState","Math","floor","random","number","this","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5d076467.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Game = props => {\n  const { yourChoice, computerChoice } = props.results;\n\n  if ((yourChoice === 1 && computerChoice === 3) || (yourChoice === 2 && computerChoice === 1) \n    || (yourChoice === 3 && computerChoice === 2)) {\n    return <h1 className=\"won\">You Won!</h1>;\n  } else if ((yourChoice === 1 && computerChoice === 2) || (yourChoice === 2 && computerChoice === 3) \n    || (yourChoice === 3 && computerChoice === 1)) {\n    return <h1 className=\"lost\">You Lost!</h1>;\n  } else if (yourChoice === computerChoice) {\n    return <h1 className=\"draw\">Draw!</h1>;\n  } else {\n    return <h1></h1>;\n  }\n};","import React from \"react\";\n\nexport const Interface = props => {\n  return (\n    <>\n      <div class=\"title\">Rock - Paper - Scissors</div>\n      <div>Choose your choice:</div>\n      <img\n        alt=\"Rock\"\n        onClick={() => props.chooseChoice(1)}\n        style={{ cursor: \"pointer\" }}\n        width=\"9%\"\n        src=\"https://static.thenounproject.com/png/477918-200.png\"\n      />\n      <img\n        alt=\"Paper\"\n        onClick={() => props.chooseChoice(2)}\n        style={{ cursor: \"pointer\" }}\n        width=\"9%\"\n        src=\"https://static.thenounproject.com/png/477922-200.png\"\n      />\n      <img\n        alt=\"Scissors\"\n        onClick={() => props.chooseChoice(3)}\n        style={{ cursor: \"pointer\" }}\n        width=\"9%\"\n        src=\"https://static.thenounproject.com/png/477919-200.png\"\n      />\n      <div>\n        <span style={{ cursor: \"pointer\" }} onClick={props.clearState}>\n          Reset\n        </span>\n      </div>\n      <div>Games: {props.games}</div>\n    </>\n  );\n};","import React from \"react\";\n\nexport const ComputerChoice = props => {\n  const { rock, paper, scissors, computerChoice } = props.allstates;\n  if (computerChoice === 1) {\n    return (\n      <div className=\"result\">\n        <div>Computer</div> <img alt=\"Rock\" width=\"70%\" src={rock} />\n      </div>\n    );\n  } else if (computerChoice === 2) {\n    return (\n      <div className=\"result\">\n        <div>Computer</div> <img alt=\"Paper\" width=\"70%\" src={paper} />\n      </div>\n    );\n  } else if (computerChoice === 3) {\n    return (\n      <div className=\"result\">\n        <div>Computer</div> <img alt=\"Scissors\" width=\"70%\" src={scissors} />\n      </div>\n    );\n  } else {\n    return null;\n  }\n};","import React from \"react\";\n\nexport const YourChoice = props => {\n  const { rock, paper, scissors, yourChoice } = props.allstates;\n  if (yourChoice === 1) {\n    return (\n      <div className=\"result\">\n        <div>You</div> <img alt=\"Rock\" width=\"70%\" src={rock} />\n      </div>\n    );\n  } else if (yourChoice === 2) {\n    return (\n      <div className=\"result\">\n        <div>You</div> <img alt=\"Paper\" width=\"70%\" src={paper} />\n      </div>\n    );\n  } else if (yourChoice === 3) {\n    return (\n      <div className=\"result\">\n        <div>You</div> <img alt=\"Scissors\" width=\"70%\" src={scissors} />\n      </div>\n    );\n  } else {\n    return null;\n  }\n};","import React from \"react\";\n\nexport const Result = props => {\n  if ((props.yourChoice === 1 && props.computerChoice === 3) || (props.yourChoice === 2 && props.computerChoice === 1) \n    || (props.yourChoice === 3 && props.computerChoice === 2)) {\n    props.wins.push(1);\n    return (\n      <h2>\n        Wins: {props.wins.length} - Draws: {props.draws.length} - Losses: {props.losses.length}\n      </h2>\n    );\n  } else if ((props.yourChoice === 1 && props.computerChoice === 2) || (props.yourChoice === 2 && props.computerChoice === 3) \n    || (props.yourChoice === 3 && props.computerChoice === 1)) {\n    props.losses.push(1);\n    return (\n      <h2>\n        Wins: {props.wins.length} - Draws: {props.draws.length} - Losses: {props.losses.length}\n      </h2>\n    );\n  } else if (props.computerChoice === props.yourChoice) {\n    props.draws.push(1);\n    return (\n      <h2>\n        Wins: {props.wins.length} - Draws: {props.draws.length} - Losses: {props.losses.length}\n      </h2>\n    );\n  } else if (props.computerChoice === null && props.yourChoice === \"\") {\n    return (\n      <h2>\n        Wins: {props.wins.length} - Draws: {props.draws.length} - Losses: {props.losses.length}\n      </h2>\n    );\n  } else {\n    return null;\n  }\n};","import React from \"react\";\nimport { Game } from \"./Game\";\nimport { Interface } from \"./Interface\";\nimport { ComputerChoice } from \"./ComputerChoice\";\nimport { YourChoice } from \"./YourChoice\";\nimport { Result } from \"./Result\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  draws = [];\n  losses = [];\n  wins = [];\n  state = {\n    games: 0,\n    yourChoice: \"\",\n    computerChoice: null,\n    rock:\n      \"https://static.thenounproject.com/png/477918-200.png\",\n    paper:\n      \"https://static.thenounproject.com/png/477922-200.png\",\n    scissors:\n      \"https://static.thenounproject.com/png/477919-200.png\",\n  };\n\n  computerChoice = () => {\n    this.setState({\n      computerChoice: Math.floor(Math.random() * 3) + 1\n    });\n  };\n\n  chooseChoice = (number) => {\n    this.setState({\n      yourChoice: number,\n      games: this.state.games + 1\n    });\n    this.computerChoice();\n  };\n\n  clearState = () => {\n    this.losses = [];\n    this.wins = [];\n    this.draws = [];\n    this.setState({\n      yourChoice: \"\",\n      computerChoice: null,\n      games: 0\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Interface\n          games={this.state.games}\n          clearState={this.clearState}\n          chooseChoice={this.chooseChoice}\n          yourChoice={this.state.yourChoice}\n          computerChoice={this.state.computerChoice}\n        />\n        <div className=\"effects\">\n          <YourChoice allstates={this.state} />\n          <ComputerChoice allstates={this.state} />\n        </div>\n        <Game results={this.state} />\n        <Result\n          wins={this.wins}\n          losses={this.losses}\n          draws={this.draws}\n          yourChoice={this.state.yourChoice}\n          computerChoice={this.state.computerChoice}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}